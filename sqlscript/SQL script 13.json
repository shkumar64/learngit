{
	"name": "SQL script 13",
	"properties": {
		"content": {
			"query": "IF NOT EXISTS (SELECT * FROM sys.objects O JOIN sys.schemas S ON O.schema_id = S.schema_id WHERE O.NAME = '[bankMarketingTestData]' AND O.TYPE = 'U' AND S.NAME = '[dbo]')\nCREATE TABLE [dbo].[bankMarketingTestData]\n\t(\n\t [age] bigint,\n\t [job] nvarchar(4000),\n\t [marital] nvarchar(4000),\n\t [education] nvarchar(4000),\n\t [default] nvarchar(4000),\n\t [housing] nvarchar(4000),\n\t [loan] nvarchar(4000),\n\t [contact] nvarchar(4000),\n\t [month] nvarchar(4000),\n\t [day_of_week] nvarchar(4000),\n\t [duration] bigint,\n\t [campaign] bigint,\n\t [pdays] bigint,\n\t [previous] bigint,\n\t [poutcome] nvarchar(4000),\n\t [emp.var.rate] float,\n\t [cons.price.idx] float,\n\t [cons.conf.idx] float,\n\t [euribor3m] float,\n\t [nr.employed] float,\n\t [y] nvarchar(4000)\n\t)\nWITH\n\t(\n\tDISTRIBUTION = ROUND_ROBIN,\n\t CLUSTERED COLUMNSTORE INDEX\n\t -- HEAP\n\t)\nGO\n\n--Uncomment the 4 lines below to create a stored procedure for data pipeline orchestrationâ€‹\n--CREATE PROC bulk_load_[bankMarketingTestData]\n--AS\n--BEGIN\nCOPY INTO [dbo].[bankMarketingTestData]\n(age 1, job 2, marital 3, education 4, default 5, housing 6, loan 7, contact 8, month 9, day_of_week 10, duration 11, campaign 12, pdays 13, previous 14, poutcome 15, emp.var.rate 16, cons.price.idx 17, cons.conf.idx 18, euribor3m 19, nr.employed 20, y 21)\nFROM 'https://synapseadlsfraud.dfs.core.windows.net/testapache/testData/bankmarketing_test.csv'\nWITH\n(\n\tFILE_TYPE = 'CSV'\n\t,MAXERRORS = 0\n\t,FIRSTROW = 2\n\t,ERRORFILE = 'https://synapseadlsfraud.dfs.core.windows.net/testapache/'\n)\n--END\nGO\n\nSELECT TOP 100 * FROM [dbo].[bankMarketingTestData]\nGO",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "transactionAnalytics",
				"poolName": "transactionAnalytics"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}